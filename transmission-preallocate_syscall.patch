--- transmission-2.03/configure.ac.orig	2010-07-25 14:35:23.000000000 +0200
+++ transmission-2.03/configure.ac	2010-07-25 14:37:39.000000000 +0200
@@ -95,6 +95,14 @@
 AC_HEADER_STDC
 AC_HEADER_TIME

+AC_MSG_CHECKING([for SYS_fallocate])
+AC_TRY_LINK([#include <sys/syscall.h>
+#include <sys/types.h>],
+		[return syscall(SYS_fallocate, 0, 0, (loff_t) 0, (loff_t) 0);],
+		[AC_DEFINE([HAVE_SYS_FALLOCATE],[1],[Defined if you have the SYS_fallocate syscall number])
+		AC_MSG_RESULT([yes])],
+		[AC_MSG_RESULT([no])])
+
 AC_CHECK_FUNCS([iconv_open pread pwrite lrintf strlcpy daemon dirname basename strcasecmp localtime_r fallocate64 posix_fallocate memmem strtold syslog valloc getpagesize posix_memalign clearenv])
 AC_PROG_INSTALL
 AC_PROG_MAKE_SET
diff -ur transmission-2.00-orig//libtransmission/fdlimit.c transmission-2.00/libtransmission/fdlimit.c
--- transmission-2.00-orig//libtransmission/fdlimit.c	2010-06-17 09:10:46.000000000 -0600
+++ transmission-2.00/libtransmission/fdlimit.c	2010-06-18 17:06:22.000000000 -0600
@@ -31,6 +31,10 @@
  #include <fcntl.h>
 #endif
 
+#ifdef HAVE_SYS_FALLOCATE
+ #include <sys/syscall.h>
+#endif
+
 #ifdef HAVE_FALLOCATE64
   /* FIXME can't find the right #include voodoo to pick up the declaration.. */
   extern int fallocate64( int fd, int mode, uint64_t offset, uint64_t len );
@@ -168,6 +172,12 @@
             success = !fcntl( fd, F_PREALLOCATE, &fst );
         }
 # endif
+# ifdef HAVE_SYS_FALLOCATE
+	if( !success )
+	{
+	    success = !syscall( SYS_fallocate, fd, 0, (loff_t) 0, (loff_t) length );
+	}
+# endif
 # ifdef HAVE_POSIX_FALLOCATE
         if( !success )
         {
Only in transmission-2.00/libtransmission: fdlimit.c.orig
